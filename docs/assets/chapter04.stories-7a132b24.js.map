{"version":3,"file":"chapter04.stories-7a132b24.js","sources":["../../src/chapter04.ts"],"sourcesContent":["import p5 from 'p5';\nimport { init } from './common';\n\n/**\n * らせんを描く\n */\nexport const spiral = () => {\n  init('らせんの描画');\n\n  globalP5Instance = new p5((p: p5) => {\n    let theta = 0;\n    const STEP = 2 * p.PI * 0.01; // 曲線の精度\n    const _rad = (t: number) => {\n      const r = 5 * t; // アルキメデスらせん\n      // const r = 20 * p.sqrt(t); // フェルマーらせん\n      // const r = p.pow(1.1, t); // 対数らせん\n      return r;\n    };\n\n    p.setup = () => {\n      p.createCanvas(500, 500);\n    };\n    p.draw = () => {\n      p.translate(p.width / 2, p.height / 2); // 描画ウィンドウの中心に移動\n      p.line(\n        _rad(theta) * p.cos(theta),\n        _rad(theta) * p.sin(theta),\n        _rad(theta + STEP) * p.cos(theta + STEP),\n        _rad(theta + STEP) * p.sin(theta + STEP)\n      );\n      theta += STEP;\n    };\n  });\n  return '';\n};\n\n/**\n * 対数らせんの拡大\n */\nexport const logSpiralZoom = () => {\n  init('対数らせんの拡大');\n\n  globalP5Instance = new p5((p: p5) => {\n    const STEP = 2 * p.PI * 0.01; // 曲線の精度\n    // 動径を定める関数\n    const _rad = (t: number) => p.pow(1.1, t);\n    // 対数らせんを描く関数\n    const _drawLogSpiral = () => {\n      let theta = 0;\n      const scalar = (p.pow(10, p.mouseX / p.width) * p.height) / 2;\n      // マウスのx座標によって1～10倍に拡大する\n      p.translate(p.width / 2, p.height / 2); // 描画ウィンドウの中心に移動\n      for (let i = 0; i < 2000; i++) {\n        p.line(\n          scalar * _rad(theta) * p.cos(theta),\n          scalar * _rad(theta) * p.sin(theta),\n          scalar * _rad(theta + STEP) * p.cos(theta + STEP),\n          scalar * _rad(theta + STEP) * p.sin(theta + STEP)\n        );\n        theta -= STEP; // 反時計回りに進むほど動径は減少する\n      }\n    };\n\n    p.setup = () => {\n      p.createCanvas(500, 500);\n      p.colorMode('hsb', 1);\n    };\n    p.draw = () => {\n      p.background(1, 0, 1);\n      _drawLogSpiral(); // 対数らせんを描画\n    };\n  });\n  return '';\n};\n\n/**\n * 再帰的に正方形を描く\n */\nexport const recurSquare = () => {\n  init('正方形の再帰的な描画');\n\n  globalP5Instance = new p5((p: p5) => {\n    let vec: p5.Vector;\n    let gap = 0.01; // 内接する正方形のずれ\n    // ベクトルから正方形を描く関数\n    const _drawSquare = (v: p5.Vector) => {\n      for (let i = 0; i < 4; i++) {\n        p.line(v[i].x, v[i].y, v[(i + 1) % 4].x, v[(i + 1) % 4].y);\n        // ベクトルのxy座標の値を取りだし，線分を描く\n      }\n    };\n    // 新しいベクトルを取得する関数\n    const _getVector = (vec: p5.Vector) => {\n      const nextVec = p.createVector(4);\n      for (let i = 0; i < 4; i++) {\n        const dir = p5.Vector.sub(vec[(i + 1) % 4], vec[i]); // 2頂点間の方向ベクトル\n        dir.mult(gap); // ずれの分を方向ベクトルにかける\n        nextVec[i] = p5.Vector.add(vec[i], dir); // 元の頂点の位置ベクトルをずらして新たなベクトルを作る\n      }\n      return nextVec;\n    };\n\n    p.setup = () => {\n      p.createCanvas(500, 500);\n      vec = p.createVector(4); // 4のベクトルを生成\n      vec[0] = p.createVector(0, 0); // ウィンドウ左上の角\n      vec[1] = p.createVector(p.width, 0); // ウィンドウ右上の角\n      vec[2] = p.createVector(p.width, p.height); // ウィンドウ右下の角\n      vec[3] = p.createVector(0, p.height); // ウィンドウ左下の角\n      console.log({ vec });\n    };\n    p.draw = () => {\n      _drawSquare(vec); // 4つのベクトルを頂点とする四角形を描画\n      vec = _getVector(vec); // ベクトルをgapの分だけずらす\n    };\n    p.mouseClicked = () => {\n      p.background(255);\n      gap = p.random(1) / 2;\n      console.log('gap =', gap);\n      vec[0] = p.createVector(0, 0);\n      vec[1] = p.createVector(p.width, 0);\n      vec[2] = p.createVector(p.width, p.height);\n      vec[3] = p.createVector(0, p.height);\n    };\n  });\n  return '';\n};\n\n/**\n * 再帰的な正方形と軌跡として現れる対数らせんを描く\n */\nexport const recurSquareSpiral = () => {\n  init('正方形の再帰的な描画と対数らせん');\n\n  globalP5Instance = new p5((p: p5) => {\n    let vec: p5.Vector; // p5.Vectorクラスのインスタンスを生成\n    let gap = 0.2;\n    const _drawLogSpiral = () => {\n      const STEP = 2 * p.PI * 0.001;\n      let b = p.sqrt(2 * gap * gap - 2 * gap + 1);\n      let c = p.atan(gap / (1 - gap));\n      const O = p.createVector(p.width / 2, p.height / 2); // ウィンドウの中心\n      let v = p.createVector(0, 0); // ウィンドウの左上の角\n      v.sub(O);\n      p.translate(O.x, O.y);\n      p.stroke(p.color(255, 0, 0));\n      p.strokeWeight(3);\n      while (v.mag() > 1) {\n        // ベクトルの長さが1以下になれば停止\n        const nextV = v.copy(); // ベクトルをコピーして新たなベクトルを生成\n        nextV.rotate(STEP); // ベクトルの回転\n        nextV.mult(p.pow(b, STEP / c)); // ベクトルのスカラー倍\n        p.line(v.x, v.y, nextV.x, nextV.y);\n        v = nextV;\n      }\n    };\n    const _drawSquare = (v: p5.Vector) => {\n      // 四角形を描く\n      for (let i = 0; i < 4; i++) {\n        p.line(v[i].x, v[i].y, v[(i + 1) % 4].x, v[(i + 1) % 4].y); // ベクトルのxy座標の値を取りだし，線分を描く\n      }\n    };\n    const _getVector = (v: p5.Vector) => {\n      // 新しい頂点を生成する\n      const newVec = p.createVector(4);\n      for (let i = 0; i < 4; i++) {\n        const dir = p5.Vector.sub(v[(i + 1) % 4], v[i]); // ずれの方向ベクトル\n        dir.mult(gap); // ずれをa倍する\n        newVec[i] = p5.Vector.add(v[i], dir); // 元の頂点の位置ベクトルにずれを足して新たなベクトルを作る\n      }\n      return newVec;\n    };\n\n    p.setup = () => {\n      p.createCanvas(500, 500);\n      vec = p.createVector(4);\n      vec[0] = p.createVector(0, 0);\n      vec[1] = p.createVector(p.width, 0);\n      vec[2] = p.createVector(p.width, p.height);\n      vec[3] = p.createVector(0, p.height);\n      _drawLogSpiral();\n    };\n    p.draw = () => {\n      p.stroke(0); // 枠線を黒色にする\n      p.strokeWeight(1);\n      _drawSquare(vec);\n      vec = _getVector(vec);\n    };\n    p.mouseClicked = () => {\n      p.background(255);\n      gap = p.random(1) / 2;\n      _drawLogSpiral();\n      vec[0] = p.createVector(0, 0);\n      vec[1] = p.createVector(p.width, 0);\n      vec[2] = p.createVector(p.width, p.height);\n      vec[3] = p.createVector(0, p.height);\n      console.log('gap =', gap);\n    };\n  });\n  return '';\n};\n\n/**\n * 再帰的な正多角形を描く\n */\nexport const recurPolygon = () => {\n  init('多角形の再帰的な描画');\n\n  globalP5Instance = new p5((p: p5) => {\n    let vec: p5.Vector; // p5.Vector型を宣言\n    let gap = 0.1; // 内接する正多角形のずれ\n    let gon = 8; // 正多角形の頂点の数\n    const _drawPolygon = (v: p5.Vector) => {\n      for (let i = 0; i < gon; i++) {\n        p.line(v[i].x, v[i].y, v[(i + 1) % gon].x, v[(i + 1) % gon].y);\n      }\n    };\n    const _getVector = (v: p5.Vector) => {\n      const nextVec = p.createVector(gon);\n      for (let i = 0; i < gon; i++) {\n        const dir = p5.Vector.sub(v[(i + 1) % gon], v[i]);\n        dir.mult(gap);\n        nextVec[i] = p5.Vector.add(v[i], dir);\n      }\n      return nextVec;\n    };\n\n    p.setup = () => {\n      p.createCanvas(500, 500);\n      vec = p.createVector(gon);\n      for (let i = 0; i < gon; i++) {\n        // 正多角形の頂点の位置ベクトル\n        vec[i] = p5.Vector.fromAngle((2 * i * p.PI) / gon);\n        vec[i].mult(p.width / 2);\n      }\n    };\n    p.draw = () => {\n      p.translate(p.width / 2, p.height / 2); // 描画ウィンドウの中心に移動\n      _drawPolygon(vec);\n      vec = _getVector(vec);\n    };\n    p.mouseClicked = () => {\n      gap = p.random(1) / 2;\n      gon = p.int(p.random(4, 16));\n      p.background(255);\n      vec = p.createVector(gon);\n      for (let i = 0; i < gon; i++) {\n        // 正多角形の頂点の位置ベクトル\n        vec[i] = p5.Vector.fromAngle((2 * i * p.PI) / gon);\n        vec[i].mult(p.width / 2);\n      }\n    };\n  });\n  return '';\n};\n\n/**\n * フィボナッチらせんと黄金らせんを描く\n */\nexport const goldFiboSpiral = () => {\n  init('黄金らせんとフィボナッチらせん');\n\n  globalP5Instance = new p5((p: p5) => {\n    let fibo = [0, 1, 1]; // フィボナッチ数列の配列\n    const SGN = [-1, 1, 1, -1]; // 正方形を敷き詰める方向\n    const _drawFiboSpiral = () => {\n      let xPos = 0;\n      let yPos = 0;\n      let scalar = p.width / (2 * fibo[fibo.length - 1]); // 拡大・縮小比率\n      for (let i = 1; i < fibo.length - 1; i++) {\n        p.rect(\n          scalar * xPos,\n          scalar * yPos,\n          scalar * SGN[(i + 1) % 4] * fibo[i],\n          scalar * SGN[i % 4] * fibo[i]\n        );\n        p.arc(\n          scalar * (xPos + SGN[(i + 1) % 4] * fibo[i]),\n          scalar * (yPos + SGN[i % 4] * fibo[i]),\n          scalar * 2 * fibo[i],\n          scalar * 2 * fibo[i],\n          ((1 + i) * p.PI) / 2,\n          ((2 + i) * p.PI) / 2\n        );\n        if (i % 2 == 1) {\n          xPos += SGN[i % 4] * (fibo[i] + fibo[i + 1]);\n        } else {\n          yPos += SGN[i % 4] * (fibo[i] + fibo[i + 1]);\n        }\n      }\n    };\n    const _drawGoldSpiral = () => {\n      const scalar = p.width / (2 * fibo[fibo.length - 1]);\n      const PHI = (1 + p.sqrt(5)) / 2; // 黄金数\n      const STEP = -p.PI / 50;\n      const O = p.createVector(1, 1); // らせんの中心\n      let v = p.createVector(0, 1); // らせんの出発点\n      for (let i = 1; i < fibo.length - 1; i++) {\n        v.add(SGN[i % 4] * fibo[i], SGN[(i - 1) % 4] * fibo[i]); // 出発点を順に移動\n      }\n      v.sub(O);\n      v.mult(scalar); // ウィンドウサイズに合わせてスカラー倍\n      p.translate(scalar, scalar); // ウィンドウサイズに合わせて移動\n      for (let i = 0; i < (fibo.length - 2) * 25; i++) {\n        // 正方形1つにつき90度分のらせんを描画\n        const nextV = v.copy();\n        nextV.rotate(STEP);\n        nextV.mult(p.pow(PHI, (2 * STEP) / p.PI));\n        p.line(v.x, v.y, nextV.x, nextV.y);\n        v = nextV;\n      }\n    };\n\n    p.setup = () => {\n      p.createCanvas(500, 500);\n      p.translate(p.width / 2, p.height / 2);\n      p.stroke(0);\n      _drawFiboSpiral(); // フィボナッチらせんの描画\n      p.stroke(255, 0, 0);\n      _drawGoldSpiral(); // 黄金らせんの描画\n    };\n    p.draw = () => {};\n    p.mouseClicked = () => {\n      p.background(255);\n      const nextFibo = fibo[fibo.length - 2] + fibo[fibo.length - 1];\n      fibo = p.append(fibo, nextFibo);\n      p.translate(p.width / 2, p.height / 2);\n      p.stroke(0);\n      _drawFiboSpiral();\n      p.stroke(255, 0, 0);\n      _drawGoldSpiral();\n      console.log(nextFibo);\n    };\n  });\n  return '';\n};\n"],"names":["spiral","init","p5","p","theta","STEP","_rad","t","logSpiralZoom","_drawLogSpiral","scalar","i","recurSquare","vec","gap","_drawSquare","v","_getVector","nextVec","dir","recurSquareSpiral","b","c","O","nextV","newVec","recurPolygon","gon","_drawPolygon","goldFiboSpiral","fibo","SGN","_drawFiboSpiral","xPos","yPos","_drawGoldSpiral","PHI","nextFibo"],"mappings":"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"}